#!/bin/sh
# Slackware build script for OpenLDAP
# Copyright (C) 2015-2019 Georgi D. Sotirov <gdsotirov@dir.bg>
# Based on the original build script for the client by Patick Volkerding
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
# 
# Visit SlackPack at http://sotirov-bg.net/slackpack/
#
# $Id: openldap.SlackBuild,v 1.16 2019/07/27 05:51:24 gsotirov Exp $
#

. ../../slack-package.conf

NAME=openldap
VERSION=2.4.48
ARCH=${ARCH:-i586}
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
CWD=${CWD:-`pwd`}

if [ ! -e $TMP ]; then
  mkdir -p $TMP # location to build the source
fi

SRC=$TMP/${NAME}-${VERSION}
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Plaese, move it or remove it."
  exit 1
fi

PKG=$TMP/package-${NAME}
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir -p $PKG

# Extract and fix source
cd $TMP
tar -xvf $CWD/${NAME}-${VERSION}.tar.?z* || exit 3
cd $SRC
fix_source

# Configure
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLCKCFLAGS" \
./configure --build=${ARCH}-slackware-linux \
            --host=${ARCH}-slackware-linux \
            --prefix=/usr \
            --sysconfdir=/etc \
            --localstatedir=/var \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --mandir=/usr/man \
            --with-cyrus-sasl \
            --with-tls \
            --with-threads \
            --enable-syslog \
            --enable-local \
            --enable-proctitle \
            --enable-dynamic \
            --disable-static \
            --enable-shared \
            --enable-slapd || exit 4

# Build & install
make depend || exit 5
make -j4 || exit 6
$DO_TEST || make test || exit 7
make DESTDIR=$PKG install || exit 8

# Additional installation steps
install -m 755 -d $PKG/etc/rc.d
install -m 644 $CWD/rc.slapd $PKG/etc/rc.d/rc.slapd.new

mv $PKG/etc/${NAME}/slapd.conf $PKG/etc/${NAME}/slapd.conf.new
mv $PKG/etc/${NAME}/ldap.conf  $PKG/etc/${NAME}/ldap.conf.new
cat << EOF >> $PKG/etc/${NAME}/ldap.conf.new

# In order to avoid problems with self-signed certificates using TLS:
# "TLS certificate verification: Error, self signed certificate"
# See also 'man ldap.conf' or http://www.openldap.org/doc/admin/tls.html
TLS_REQCERT allow

EOF

# Prepare
bin_perms $PKG
sbin_perms $PKG
( cd $PKG; strip_bin; strip_lib )
gzip_man $PKG
create_docs $PKG ${NAME}-${VERSION}
( cd $PKG; rm -rf usr/doc/${NAME}-${VERSION}/doc )

mkdir -p $PKG/install
install -m 644 $CWD/doinst.sh       $PKG/install/doinst.sh
install -m 644 $CWD/slack-desc      $PKG/install/slack-desc
install -m 644 $CWD/slack-conflicts $PKG/install/slack-conflicts
install -m 644 $CWD/slack-required  $PKG/install/slack-required

SBDIR=$PKG/usr/src/slackbuilds/${NAME}-${VERSION}
mkdir -p $PKG/usr/src/slackbuilds/${NAME}-${VERSION}
install -m 644 $CWD/doinst.sh          $SBDIR/doinst.sh
install -m 644 $CWD/slack-desc         $SBDIR/slack-desc
install -m 644 $CWD/slack-required     $SBDIR/slack-required
install -m 644 $CWD/slack-conflicts    $SBDIR/slack-conflicts
install -m 644 $CWD/rc.slapd           $SBDIR/rc.slapd
install -m 644 $CWD/${NAME}.SlackBuild $SBDIR/${NAME}.SlackBuild

# Create package
cd $PKG
PKGNAME=${NAME}-${VERSION}-${ARCH}-${BUILD}${MYIN}
makepkg -l y -c n $PKG_DIR/${PKGNAME}.txz
( cd $PKG_DIR
  md5sum ${PKGNAME}.txz > ${PKGNAME}.txz.md5
  cat $PKG/install/slack-desc > $PKG_DIR/${PKGNAME}.txt
)

# Clean up (optionally)
if [ "$1" == "--cleanup" ]; then
   rm -rf $TMP/${NAME}-${VERSION}
   rm -rf $TMP/package-${NAME}
fi

